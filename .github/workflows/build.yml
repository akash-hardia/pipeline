# name: app-build
# on:
#   workflow_dispatch:
#   pull_request:     # when hotfix PR is merged in main
#     branches:
#       - 'main'
#     types:
#       - closed
#   push:             # push to develop branch
#     branches:
#       - develop

# jobs:
#   print-stuff:
#     runs-on: ubuntu-latest
#     steps:
#       - name: print
#         run: |
#           echo "Printing"
#           echo "github.event.pull_request.merged: ${{ github.event.pull_request.merged }}"
#           echo "github.base_ref: ${{ github.base_ref }}"
#           echo "github.ref: ${{ github.ref }}"
#   build:
#     permissions: write-all
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/develop' || github.event.pull_request.merged == true && github.base_ref == 'main' || contains(github.ref, 'fix-') || contains(github.ref, 'feat-')
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Build image
#         run: |
#           echo "Build the image"

#   set-dev-tag:      # only for develop & hotfix case
#     needs: [build]
#     if: needs.build.result == 'success' && github.ref == 'refs/heads/develop'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Repository Dispatch
#         uses: peter-evans/repository-dispatch@v3
#         with:
#           event-type: set-dev-tag
#           token: ${{ secrets.PUBLIC_REPO }}
#           client-payload: '{"ref": "refs/heads/develop", "sha": "${{ github.sha }}"}'

#   set-hotfix-tag:      # only for develop & hotfix case
#     needs: [build]
#     if: needs.build.result == 'success' && github.event.pull_request.merged == true && github.base_ref == 'main'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Repository Dispatch
#         uses: peter-evans/repository-dispatch@v3
#         with:
#           token: ${{ secrets.PUBLIC_REPO }}
#           event-type: set-prod-tag
#           client-payload: '{"ref": "refs/heads/main", "sha": "${{ github.sha }}"}'

name: app-build
on:
  workflow_dispatch:
  pull_request:     # when PR is opened against main
    branches:
      - 'main'
  push:             # push to develop branch
    branches:
      - develop

permissions:
  contents: write

jobs:
  print-stuff:
    runs-on: ubuntu-latest
    steps:
      - name: print
        run: |
          echo "Printing"
          echo "github.event.pull_request.merged: ${{ github.event.pull_request.merged }}"
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event: ${{ github.event }}"
          echo "contains(github.head_ref, 'hotfix-*'): ${{ contains(github.head_ref, 'hotfix-*') }}"
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    # if it's not a pull_request, then run for any branch. Else, only run for hotfix-*
    if: github.event_name != 'pull_request' && true || contains(github.head_ref, 'hotfix-') && true || false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build image
        run: |
          echo "Build the image"
          echo "Successfully built the image! with commit ${{ github.sha }}"

  deploy_development:
    needs: [build]
    if: needs.build.result == 'success' && github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      environment: development

  set-hotfix-tag:      # when PR is opened from hotfix-* against main
    needs: [build]
    if: needs.build.result == 'success' && contains(github.head_ref, 'hotfix-') && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PUBLIC_REPO }}
          event-type: set-hotfix-tag
          client-payload: '{"env": "hotfix"}'

  set-prod-tag:      # when PR is opened from hotfix-* against main
    needs: [build]
    if: needs.build.result == 'success' && contains(github.head_ref, 'hotfix-') && github.event.pull_request.merged == true && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PUBLIC_REPO }}
          event-type: set-prod-tag
          client-payload: '{"env": "hotfix-to-prod-tag"}'
