name: app-build
on:
  workflow_dispatch:              # for all dev envs
  pull_request:     # pr against main (for production)
    branches:
      - 'main'
    types:
      - opened
      - reopened
      - synchronize
  push:             # push to develop branch (for staging)
    branches:
      - develop

permissions:
  contents: write

jobs:
  # print-stuff:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: print
  #       run: |
  #         echo "Printing"
  #         echo "github.event.pull_request.merged: ${{ github.event.pull_request.merged }}"
  #         echo "github.base_ref: ${{ github.base_ref }}"
  #         echo "github.ref: ${{ github.ref }}"
  #         echo "github.head_ref: ${{ github.head_ref }}"
  #         echo "github.event_name: ${{ github.event_name }}"
  #         echo "github.event: ${{ github.event }}"
  #         echo "contains(github.head_ref, 'hotfix-'): ${{ contains(github.head_ref, 'hotfix-') }}"
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    # if it's not a pull_request, then run for any branch. Else, only run for hotfix-* when it's not merged
    if: github.event_name != 'pull_request' && true || contains(github.head_ref, 'hotfix-') && github.event.pull_request.merged != true || false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build image
        run: |
          echo "Build the image"
          echo "Successfully built the image! with commit ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}"

  deploy_staging:       # Once built on develop branch, deploy to staging
    needs: [build]
    if: needs.build.result == 'success' && github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      environment: staging

  set-hotfix-tag:      # when PR is opened from hotfix-* against main & not merged yet.
    needs: [build]
    if: needs.build.result == 'success' && contains(github.head_ref, 'hotfix-') && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PUBLIC_REPO }}
          event-type: set-hotfix-tag
          client-payload: '{"env": "hotfix", "sha": "${{ github.event.pull_request.head.sha }}"}'
