# name: tag-seter
# on:
#   push:               # runs when pushed to release
#     branches:
#       - release
#   repository_dispatch:        # auto-merge case - main & develop
#     types: [set-prod-tag, set-dev-tag]

# permissions:
#   contents: write

# jobs:
  # dev-image-tag:
  #   if: ${{ github.event.client_payload.ref == 'refs/heads/develop' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: gh
  #       run: |
  #         gh variable list
  #         gh variable set IMAGE_TAG --body ${{ github.sha }} --env development
  #         gh variable list
  #       env:
  #         GH_TOKEN: ${{ secrets.FULL_PAT }}

  # stage-image-tag:
  #   if: github.event.ref == 'refs/heads/release'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: gh
  #       run: |
  #         gh variable list
  #         gh variable set IMAGE_TAG --body ${{ github.sha }} --env staging
  #         gh variable list
  #       env:
  #         GH_TOKEN: ${{ secrets.FULL_PAT }}

  # production-image-tag:
  #   if: ${{ github.event.client_payload.ref == 'refs/heads/main' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: gh
  #       run: |
  #         gh variable list
  #         gh variable set IMAGE_TAG --body ${{ github.sha }} --env production
  #         gh variable list
  #       env:
  #         GH_TOKEN: ${{ secrets.FULL_PAT }}

  # deploy_development:
  #   needs: [dev-image-tag]
  #   if: needs.dev-image-tag.result == 'success'
  #   uses: ./.github/workflows/deploy.yml
  #   secrets: inherit
  #   with:
  #     environment: development

  # deploy_staging:               # once the tag is set, auto deploy using set tag.
  #   needs: [stage-image-tag]
  #   if: needs.stage-image-tag.result == 'success'
  #   uses: ./.github/workflows/deploy.yml
  #   secrets: inherit
  #   with:
  #     environment: staging

name: tag-seter
on:
  repository_dispatch:
    types: [set-dev-tag, set-stage-tag, set-prod-tag, set-hotfix-tag]

permissions:
  contents: write

jobs:
  dev-image-tag:
    if: ${{ github.event.client_payload.env == 'development' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: gh
        run: |
          gh variable list
          gh variable set IMAGE_TAG --body ${{ github.sha }} --env development
          gh variable list
        env:
          GH_TOKEN: ${{ secrets.FULL_PAT }}
  stage-image-tag:
    if: ${{ github.event.client_payload.env == 'staging' }}
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4
      - name: gh
        run: |
          gh variable list
          gh variable set IMAGE_TAG --body ${{ vars.IMAGE_TAG }} --env staging
          gh variable list
        env:
          GH_TOKEN: ${{ secrets.FULL_PAT }}

  hotfix-image-tag:
    if: ${{ github.event.client_payload.env == 'hotfix' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: gh
        run: |
          gh variable list
          gh variable set HOTFIX_IMAGE_TAG --body ${{ github.event.client_payload.sha }}
          gh variable list
        env:
          GH_TOKEN: ${{ secrets.FULL_PAT }}

  prod-image-tag:         # when develop is merged to main
    if: ${{ github.event.client_payload.env == 'production' }}
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: gh
        run: |
          gh variable list
          gh variable set IMAGE_TAG --body ${{ vars.IMAGE_TAG }} --env production
          gh variable list
        env:
          GH_TOKEN: ${{ secrets.FULL_PAT }}

  hotfix-to-prod-image-tag:               # when hotfix is merged to main
    if: ${{ github.event.client_payload.env == 'hotfix-to-prod-tag' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: gh
        run: |
          gh variable list
          gh variable set IMAGE_TAG --body ${{ vars.HOTFIX_IMAGE_TAG }} --env production
          gh variable list
        env:
          GH_TOKEN: ${{ secrets.FULL_PAT }}

  deploy_staging:                       # deploy to staging using dev tag
    needs: [dev-image-tag]
    if: needs.dev-image-tag.result == 'success'
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      environment: staging

  # automerge-to-main:            # automerge develop to main, once stage-IT is set
  #   needs: [stage-image-tag]
  #   if: needs.stage-image-tag.result == 'success'
  #   uses: ./.github/workflows/automerge.yml
  #   secrets: inherit
