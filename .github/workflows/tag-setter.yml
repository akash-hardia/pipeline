name: tag-seter
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - develop


# env:
#   AWS_REGION: ap-southeast-1
#   ECR_ACCOUNT_ID: 983961151039
#   REPO_NAME: skincredible-services
#   IMAGE_TAG: sha-${{ github.sha }}

# permissions:
#   id-token: write
#   contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Assume push role
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-region: ${{ env.AWS_REGION }}
      #     role-to-assume: ${{ secrets.AWS_PUSH_ROLE_TO_ASSUME }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      #   with:
      #     install: true

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2
      #   with:
      #     registries: ${{ env.ECR_ACCOUNT_ID }}

      # - name: Login to ghcr
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GH_PACKAGES_TOKEN }}

      # - name: Cache Docker Build
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      # - name: Set image name
      #   id: image-name
      #   run: |
      #     echo "IMAGE_NAME=${ECR_ACCOUNT_ID}.dkr.ecr.ap-southeast-1.amazonaws.com/${REPO_NAME}" >> $GITHUB_ENV
      #     echo ::set-output name=image_name::${ECR_ACCOUNT_ID}.dkr.ecr.ap-southeast-1.amazonaws.com/${REPO_NAME}

      # - name: Docker meta
      #   uses: docker/metadata-action@v3
      #   id: image-meta
      #   with:
      #     images: |
      #       ${{ steps.image-name.outputs.image_name }}
      #     tags: |
      #       type=edge,branch=develop
      #       type=ref,event=branch,enable=false
      #       type=ref,event=tag
      #       type=raw,value=latest,enable={{is_default_branch}}
      #       type=sha,format=long,prefix=sha-

      # - name: Build Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: false
      #     load: true
      #     tags: ${{ steps.image-meta.outputs.tags }}
      #     labels: ${{ steps.image-meta.outputs.labels }}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new
      #     secrets: |
      #       "github_credentials=sephora-bot:${{ secrets.GH_PACKAGES_TOKEN }}"

      # - name: Move cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # - name: Trivy cache
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/trivy
      #     key: ${{ runner.os }}-trivy

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: ${{ steps.image-name.outputs.image_name }}:${{ env.IMAGE_TAG }}
      #     format: 'table'
      #     exit-code: '0' # Change this to 1 when we want to fail the build
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'
      #     timeout: '10m'

      # - name: Push Image
      #   if: success()
      #   run: |
      #     docker push ${{ steps.image-name.outputs.image_name }}:${{ env.IMAGE_TAG }}

      # - name: update Image Tag ENV value
      #   if: ${{ github.event.pull_request.merged == true && github.base.ref == 'refs/heads/develop' }}
      #   uses: mmoyaferrer/set-github-variable@v1.0.0
      #   with:
      #     token: ${{ secrets.GH_TOKEN_SEPHORA_BOT }}
      #     repository: ${{ github.repository }}
      #     name: IMAGE_TAG
      #     value: ${{ env.IMAGE_TAG }}

      # - name: Logout of Amazon ECR and Docker Package Registry
      #   if: always()
      #   run: |
      #     docker logout ${{ env.ECR_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com
      #     docker logout ghcr.io
  # deploy-staging:
  #   needs: build
  #   if: github.ref == 'refs/heads/develop'
  #   uses: ./.github/workflows/app-deploy.yml
  #   with:
  #     environment: 'staging'
